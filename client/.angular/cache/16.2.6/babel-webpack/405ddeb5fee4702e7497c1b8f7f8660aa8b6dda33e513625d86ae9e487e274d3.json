{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router, cd, authService // Inject the AuthService\n  ) {\n    this.router = router;\n    this.cd = cd;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n  }\n  onSubmit() {\n    this.authService.login({\n      username: this.username,\n      password: this.password\n    }).subscribe(response => {\n      // Depending on the response you might want to store user data or tokens\n      console.log('Logged in successfully', response);\n      this.router.navigate(['/home']);\n    }, error => {\n      console.error('Login failed:', error);\n      // Here you can handle detailed error codes as required\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"routerLink\", \"/register\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Don't have an account? \");\n        i0.ɵɵelementStart(15, \"a\", 6);\n        i0.ɵɵtext(16, \"Register here\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i1.RouterLink],\n    styles: [\"div[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 50px auto;\\n    padding: 20px;\\n    border: 1px solid #ddd;\\n    background-color: #fff;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","router","cd","authService","username","password","onSubmit","login","subscribe","response","console","log","navigate","error","_","i0","ɵɵdirectiveInject","i1","Router","ChangeDetectorRef","i2","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\login\\login.component.ts","C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';  // Import the AuthService\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    private router: Router,\n    private cd: ChangeDetectorRef,\n    private authService: AuthService  // Inject the AuthService\n  ) {}\n\n  onSubmit() {\n    this.authService.login({ username: this.username, password: this.password }).subscribe(\n      response => {\n        // Depending on the response you might want to store user data or tokens\n        console.log('Logged in successfully', response);\n        this.router.navigate(['/home']);\n      },\n      error => {\n        console.error('Login failed:', error);\n        // Here you can handle detailed error codes as required\n      }\n    );\n  }\n}\n","<div>\n  <br>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required>\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n  <p>Don't have an account? <a routerLink=\"/register\">Register here</a> </p>\n\n</div>"],"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EAIzBC,YACUC,MAAc,EACdC,EAAqB,EACrBC,WAAwB,CAAE;EAAA,E;IAF1B,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IANrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAMlB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAAEH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACG,SAAS,CACpFC,QAAQ,IAAG;MACT;MACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MAC/C,IAAI,CAACR,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;IACF,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBAtBUf,cAAc,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAI,iBAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdvB,cAAc;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3Bd,EAAA,CAAAgB,cAAA,UAAK;QACHhB,EAAA,CAAAiB,SAAA,SAAI;QACJjB,EAAA,CAAAgB,cAAA,cAA8B;QAAxBhB,EAAA,CAAAkB,UAAA,sBAAAC,iDAAA;UAAA,OAAYJ,GAAA,CAAAxB,QAAA,EAAU;QAAA,EAAC;QAC3BS,EAAA,CAAAgB,cAAA,UAAK;QACmBhB,EAAA,CAAAoB,MAAA,gBAAS;QAAApB,EAAA,CAAAqB,YAAA,EAAQ;QACvCrB,EAAA,CAAAgB,cAAA,eAAiF;QAAhDhB,EAAA,CAAAkB,UAAA,2BAAAI,uDAAAC,MAAA;UAAA,OAAAR,GAAA,CAAA1B,QAAA,GAAAkC,MAAA;QAAA,EAAsB;QAAvDvB,EAAA,CAAAqB,YAAA,EAAiF;QAEnFrB,EAAA,CAAAgB,cAAA,UAAK;QACmBhB,EAAA,CAAAoB,MAAA,gBAAS;QAAApB,EAAA,CAAAqB,YAAA,EAAQ;QACvCrB,EAAA,CAAAgB,cAAA,gBAAqF;QAAhDhB,EAAA,CAAAkB,UAAA,2BAAAM,wDAAAD,MAAA;UAAA,OAAAR,GAAA,CAAAzB,QAAA,GAAAiC,MAAA;QAAA,EAAsB;QAA3DvB,EAAA,CAAAqB,YAAA,EAAqF;QAEvFrB,EAAA,CAAAgB,cAAA,iBAAsB;QAAAhB,EAAA,CAAAoB,MAAA,aAAK;QAAApB,EAAA,CAAAqB,YAAA,EAAS;QAEtCrB,EAAA,CAAAgB,cAAA,SAAG;QAAAhB,EAAA,CAAAoB,MAAA,+BAAuB;QAAApB,EAAA,CAAAgB,cAAA,YAA0B;QAAAhB,EAAA,CAAAoB,MAAA,qBAAa;QAAApB,EAAA,CAAAqB,YAAA,EAAI;;;QARhCrB,EAAA,CAAAyB,SAAA,GAAsB;QAAtBzB,EAAA,CAAA0B,UAAA,YAAAX,GAAA,CAAA1B,QAAA,CAAsB;QAIlBW,EAAA,CAAAyB,SAAA,GAAsB;QAAtBzB,EAAA,CAAA0B,UAAA,YAAAX,GAAA,CAAAzB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}