{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.username = '';\n    this.email = '';\n    this.password = '';\n    this.firstName = '';\n    this.lastName = '';\n  }\n  onSubmit() {\n    const user = {\n      username: this.username,\n      email: this.email,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName\n    };\n    this.authService.register(user).subscribe(response => {\n      console.log('Registered successfully!', response);\n      this.router.navigate(['/login']);\n    }, error => {\n      console.error('Registration failed', error);\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 25,\n    vars: 5,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n        i0.ɵɵtext(13, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\")(16, \"label\", 7);\n        i0.ɵɵtext(17, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\")(20, \"label\", 9);\n        i0.ɵɵtext(21, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"button\", 11);\n        i0.ɵɵtext(24, \"Register\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.lastName);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RegisterComponent","constructor","authService","router","username","email","password","firstName","lastName","onSubmit","user","register","subscribe","response","console","log","navigate","error","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","RegisterComponent_Template_input_ngModelChange_6_listener","$event","RegisterComponent_Template_input_ngModelChange_10_listener","RegisterComponent_Template_input_ngModelChange_14_listener","RegisterComponent_Template_input_ngModelChange_18_listener","RegisterComponent_Template_input_ngModelChange_22_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\register\\register.component.ts","C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  username: string = '';\n  email: string = '';\n  password: string = '';\n  firstName: string = '';\n  lastName: string = '';\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  onSubmit() {\n    const user = {\n      username: this.username,\n      email: this.email,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName\n    };\n\n    this.authService.register(user).subscribe(\n      (response) => {\n        console.log('Registered successfully!', response);\n        this.router.navigate(['/login']);\n      },\n      (error) => {\n        console.error('Registration failed', error);\n      }\n    );\n  }\n}\n","\n<div>\n    <br>\n    <form (ngSubmit)=\"onSubmit()\">\n      <div>\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required>\n      </div>\n      <div>\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n      </div>\n      <div>\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n      </div>\n      <div>\n        <label for=\"firstName\">First Name:</label>\n        <input type=\"text\" id=\"firstName\" [(ngModel)]=\"firstName\" name=\"firstName\">\n      </div>\n      <div>\n        <label for=\"lastName\">Last Name:</label>\n        <input type=\"text\" id=\"lastName\" [(ngModel)]=\"lastName\" name=\"lastName\">\n      </div>\n      <button type=\"submit\">Register</button>\n    </form>\n  </div>\n  "],"mappings":";;;;AASA,OAAM,MAAOA,iBAAiB;EAO5BC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IARhB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,QAAQ,GAAW,EAAE;EAKlB;EAEHC,QAAQA,CAAA;IACN,MAAMC,IAAI,GAAG;MACXN,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACN,WAAW,CAACS,QAAQ,CAACD,IAAI,CAAC,CAACE,SAAS,CACtCC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjD,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBA9BUlB,iBAAiB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBzB,iBAAiB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9Bb,EAAA,CAAAe,cAAA,UAAK;QACDf,EAAA,CAAAgB,SAAA,SAAI;QACJhB,EAAA,CAAAe,cAAA,cAA8B;QAAxBf,EAAA,CAAAiB,UAAA,sBAAAC,oDAAA;UAAA,OAAYJ,GAAA,CAAAxB,QAAA,EAAU;QAAA,EAAC;QAC3BU,EAAA,CAAAe,cAAA,UAAK;QACmBf,EAAA,CAAAmB,MAAA,gBAAS;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACvCpB,EAAA,CAAAe,cAAA,eAAiF;QAAhDf,EAAA,CAAAiB,UAAA,2BAAAI,0DAAAC,MAAA;UAAA,OAAAR,GAAA,CAAA7B,QAAA,GAAAqC,MAAA;QAAA,EAAsB;QAAvDtB,EAAA,CAAAoB,YAAA,EAAiF;QAEnFpB,EAAA,CAAAe,cAAA,UAAK;QACgBf,EAAA,CAAAmB,MAAA,aAAM;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACjCpB,EAAA,CAAAe,cAAA,gBAAyE;QAA1Cf,EAAA,CAAAiB,UAAA,2BAAAM,2DAAAD,MAAA;UAAA,OAAAR,GAAA,CAAA5B,KAAA,GAAAoC,MAAA;QAAA,EAAmB;QAAlDtB,EAAA,CAAAoB,YAAA,EAAyE;QAE3EpB,EAAA,CAAAe,cAAA,WAAK;QACmBf,EAAA,CAAAmB,MAAA,iBAAS;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACvCpB,EAAA,CAAAe,cAAA,gBAAqF;QAAhDf,EAAA,CAAAiB,UAAA,2BAAAO,2DAAAF,MAAA;UAAA,OAAAR,GAAA,CAAA3B,QAAA,GAAAmC,MAAA;QAAA,EAAsB;QAA3DtB,EAAA,CAAAoB,YAAA,EAAqF;QAEvFpB,EAAA,CAAAe,cAAA,WAAK;QACoBf,EAAA,CAAAmB,MAAA,mBAAW;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QAC1CpB,EAAA,CAAAe,cAAA,gBAA2E;QAAzCf,EAAA,CAAAiB,UAAA,2BAAAQ,2DAAAH,MAAA;UAAA,OAAAR,GAAA,CAAA1B,SAAA,GAAAkC,MAAA;QAAA,EAAuB;QAAzDtB,EAAA,CAAAoB,YAAA,EAA2E;QAE7EpB,EAAA,CAAAe,cAAA,WAAK;QACmBf,EAAA,CAAAmB,MAAA,kBAAU;QAAAnB,EAAA,CAAAoB,YAAA,EAAQ;QACxCpB,EAAA,CAAAe,cAAA,iBAAwE;QAAvCf,EAAA,CAAAiB,UAAA,2BAAAS,2DAAAJ,MAAA;UAAA,OAAAR,GAAA,CAAAzB,QAAA,GAAAiC,MAAA;QAAA,EAAsB;QAAvDtB,EAAA,CAAAoB,YAAA,EAAwE;QAE1EpB,EAAA,CAAAe,cAAA,kBAAsB;QAAAf,EAAA,CAAAmB,MAAA,gBAAQ;QAAAnB,EAAA,CAAAoB,YAAA,EAAS;;;QAlBJpB,EAAA,CAAA2B,SAAA,GAAsB;QAAtB3B,EAAA,CAAA4B,UAAA,YAAAd,GAAA,CAAA7B,QAAA,CAAsB;QAIxBe,EAAA,CAAA2B,SAAA,GAAmB;QAAnB3B,EAAA,CAAA4B,UAAA,YAAAd,GAAA,CAAA5B,KAAA,CAAmB;QAIbc,EAAA,CAAA2B,SAAA,GAAsB;QAAtB3B,EAAA,CAAA4B,UAAA,YAAAd,GAAA,CAAA3B,QAAA,CAAsB;QAIzBa,EAAA,CAAA2B,SAAA,GAAuB;QAAvB3B,EAAA,CAAA4B,UAAA,YAAAd,GAAA,CAAA1B,SAAA,CAAuB;QAIxBY,EAAA,CAAA2B,SAAA,GAAsB;QAAtB3B,EAAA,CAAA4B,UAAA,YAAAd,GAAA,CAAAzB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}