{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Your Information\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"label\", 8);\n    i0.ɵɵtext(5, \"First Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_17_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.user.firstName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\")(8, \"label\", 10);\n    i0.ɵɵtext(9, \"Last Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_17_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.user.lastName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"label\", 12);\n    i0.ɵɵtext(13, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_17_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.user.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_17_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onUpdate());\n    });\n    i0.ɵɵtext(16, \"Update\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.firstName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.lastName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.email);\n  }\n}\nexport class LoginComponent {\n  constructor(router, cd, authService) {\n    this.router = router;\n    this.cd = cd;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n    this.user = null;\n  }\n  onSubmit() {\n    this.authService.login({\n      username: this.username,\n      password: this.password\n    }).subscribe(response => {\n      console.log('Logged in successfully', response);\n      this.user = response.user; // Store the returned user data\n      this.router.navigate(['/login']);\n    }, error => {\n      console.error('Login failed:', error);\n    });\n  }\n  onUpdate() {\n    // Implement the update logic here, for example:\n    this.authService.updateUser(this.user._id, this.user).subscribe(response => {\n      console.log('User updated successfully:', response);\n      // You can add success message or other actions as needed.\n    }, error => {\n      console.error('Update failed:', error);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"routerLink\", \"/register\"], [4, \"ngIf\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Don't have an account? \");\n        i0.ɵɵelementStart(15, \"a\", 6);\n        i0.ɵɵtext(16, \"Register here\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 17, 3, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.user);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i1.RouterLink],\n    styles: [\"div[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 50px auto;\\n    padding: 20px;\\n    border: 1px solid #ddd;\\n    background-color: #fff;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_div_17_Template_input_ngModelChange_6_listener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","user","firstName","LoginComponent_div_17_Template_input_ngModelChange_10_listener","ctx_r3","lastName","LoginComponent_div_17_Template_input_ngModelChange_14_listener","ctx_r4","email","LoginComponent_div_17_Template_button_click_15_listener","ctx_r5","onUpdate","ɵɵadvance","ɵɵproperty","ctx_r0","LoginComponent","constructor","router","cd","authService","username","password","onSubmit","login","subscribe","response","console","log","navigate","error","updateUser","_id","_","ɵɵdirectiveInject","i1","Router","ChangeDetectorRef","i2","AuthService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","LoginComponent_Template_form_ngSubmit_2_listener","LoginComponent_Template_input_ngModelChange_6_listener","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵtemplate","LoginComponent_div_17_Template"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\login\\login.component.ts","C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';  // Import the AuthService\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n  user: any = null;\n\n  constructor(\n    private router: Router,\n    private cd: ChangeDetectorRef,\n    private authService: AuthService\n  ) {}\n\n  onSubmit() {\n    this.authService.login({ username: this.username, password: this.password }).subscribe(\n      response => {\n        console.log('Logged in successfully', response);\n        this.user = response.user; // Store the returned user data\n        this.router.navigate(['/login']);\n      },\n      error => {\n        console.error('Login failed:', error);\n      }\n    );\n  }\n\n  onUpdate() {\n    // Implement the update logic here, for example:\n    this.authService.updateUser(this.user._id, this.user).subscribe(response => {\n      console.log('User updated successfully:', response);\n      // You can add success message or other actions as needed.\n    }, error => {\n      console.error('Update failed:', error);\n    });\n  }\n}\n","<div>\n  <br>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required>\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n    </div>\n    <button type=\"submit\">Login</button>\n  </form>\n  <p>Don't have an account? <a routerLink=\"/register\">Register here</a> </p>\n\n  <div *ngIf=\"user\">\n    <h3>Your Information</h3>\n    <div>\n      <label for=\"firstName\">First Name:</label>\n      <input type=\"text\" id=\"firstName\" [(ngModel)]=\"user.firstName\" name=\"firstName\">\n    </div>\n    <div>\n      <label for=\"lastName\">Last Name:</label>\n      <input type=\"text\" id=\"lastName\" [(ngModel)]=\"user.lastName\" name=\"lastName\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"text\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\">\n    </div>\n    <button (click)=\"onUpdate()\">Update</button>\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}