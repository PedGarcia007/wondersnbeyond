{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router, cd, authService // Inject the AuthService\n  ) {\n    this.router = router;\n    this.cd = cd;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n  }\n  onSubmit() {\n    this.authService.login({\n      username: this.username,\n      password: this.password\n    }).subscribe(response => {\n      // Depending on the response you might want to store user data or tokens\n      console.log('Logged in successfully', response);\n      this.router.navigate(['/home']);\n    }, error => {\n      console.error('Login failed:', error);\n      // Here you can handle detailed error codes as required\n    });\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","cd","authService","username","password","onSubmit","login","subscribe","response","console","log","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';  // Import the AuthService\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  username: string = '';\n  password: string = '';\n\n  constructor(\n    private router: Router,\n    private cd: ChangeDetectorRef,\n    private authService: AuthService  // Inject the AuthService\n  ) {}\n\n  onSubmit() {\n    this.authService.login({ username: this.username, password: this.password }).subscribe(\n      response => {\n        // Depending on the response you might want to store user data or tokens\n        console.log('Logged in successfully', response);\n        this.router.navigate(['/home']);\n      },\n      error => {\n        console.error('Login failed:', error);\n        // Here you can handle detailed error codes as required\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AASrD,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YACUC,MAAc,EACdC,EAAqB,EACrBC,WAAwB,CAAE;EAAA,E;IAF1B,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IANrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAMlB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MAAEH,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACG,SAAS,CACpFC,QAAQ,IAAG;MACT;MACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MAC/C,IAAI,CAACR,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;IACF,CAAC,CACF;EACH;CACD;;AAvBYd,cAAc,GAAAe,UAAA,EAL1BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWlB,cAAc,CAuB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}