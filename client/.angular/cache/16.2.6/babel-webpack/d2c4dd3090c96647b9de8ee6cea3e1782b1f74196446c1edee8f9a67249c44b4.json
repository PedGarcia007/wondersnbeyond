{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppComponent_nav_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\")(1, \"ul\")(2, \"li\")(3, \"a\", 1);\n    i0.ɵɵtext(4, \"Home\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"li\")(6, \"a\", 2);\n    i0.ɵɵtext(7, \"Deities\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"li\")(9, \"a\", 3);\n    i0.ɵɵtext(10, \"Potions\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"li\")(12, \"a\", 4);\n    i0.ɵɵtext(13, \"Spells\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"li\")(15, \"a\", 5);\n    i0.ɵɵtext(16, \"Spell Share\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction AppComponent_nav_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nav\")(1, \"ul\")(2, \"li\")(3, \"a\", 6);\n    i0.ɵɵtext(4, \"Login\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class AppComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.title = 'client';\n  } // Inject AuthService\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"routerLink\", \"/home\"], [\"routerLink\", \"/deities\"], [\"routerLink\", \"/potions\"], [\"routerLink\", \"/spells\"], [\"routerLink\", \"/spell-share\"], [\"routerLink\", \"/login\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"header\")(1, \"h1\");\n        i0.ɵɵtext(2, \"Welcome to Wonders and Beyond!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, AppComponent_nav_3_Template, 17, 0, \"nav\", 0);\n        i0.ɵɵtemplate(4, AppComponent_nav_4_Template, 5, 0, \"nav\", 0);\n        i0.ɵɵelementStart(5, \"main\");\n        i0.ɵɵelement(6, \"router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.authService.isLoggedIn());\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","authService","title","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_nav_3_Template","AppComponent_nav_4_Template","ɵɵelement","ɵɵadvance","ɵɵproperty","isLoggedIn"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\app.component.ts","C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from './auth.service'; // Import AuthService\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n\n  constructor(public authService: AuthService) {} // Inject AuthService\n}\n","<header>\n  <h1>Welcome to Wonders and Beyond!</h1>\n</header>\n\n<nav *ngIf=\"authService.isLoggedIn()\">\n  <ul>\n    <li><a routerLink=\"/home\">Home</a></li>\n    <li><a routerLink=\"/deities\">Deities</a></li>\n    <li><a routerLink=\"/potions\">Potions</a></li>\n    <li><a routerLink=\"/spells\">Spells</a></li>\n    <li><a routerLink=\"/spell-share\">Spell Share</a></li>\n<!--may add this later <li><a (click)=\"authService.logout()\">Logout</a></li> You might want to add a logout method to the AuthService -->\n  </ul>\n</nav>\n\n<nav *ngIf=\"!authService.isLoggedIn()\">\n  <ul>\n    <li><a routerLink=\"/login\">Login</a></li> \n<!--may add this later <li><a routerLink=\"/register\">Register</a></li>-->\n  </ul>\n</nav>\n\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n"],"mappings":";;;;;;ICIAA,EAAA,CAAAC,cAAA,UAAsC;IAERD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAClCH,EAAA,CAAAC,cAAA,SAAI;IAAyBD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxCH,EAAA,CAAAC,cAAA,SAAI;IAAyBD,EAAA,CAAAE,MAAA,eAAO;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACxCH,EAAA,CAAAC,cAAA,UAAI;IAAwBD,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACtCH,EAAA,CAAAC,cAAA,UAAI;IAA6BD,EAAA,CAAAE,MAAA,mBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAKpDH,EAAA,CAAAC,cAAA,UAAuC;IAERD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADTxC,OAAM,MAAOC,YAAY;EAGvBC,YAAmBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF9B,KAAAC,KAAK,GAAG,QAAQ;EAE8B,CAAC,CAAC;EAAA,QAAAC,CAAA,G;qBAHrCJ,YAAY,EAAAJ,EAAA,CAAAS,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZR,YAAY;IAAAS,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRzBnB,EAAA,CAAAC,cAAA,aAAQ;QACFD,EAAA,CAAAE,MAAA,qCAA8B;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGzCH,EAAA,CAAAqB,UAAA,IAAAC,2BAAA,kBASM;QAENtB,EAAA,CAAAqB,UAAA,IAAAE,2BAAA,iBAKM;QAGNvB,EAAA,CAAAC,cAAA,WAAM;QACJD,EAAA,CAAAwB,SAAA,oBAA+B;QACjCxB,EAAA,CAAAG,YAAA,EAAO;;;QArBDH,EAAA,CAAAyB,SAAA,GAA8B;QAA9BzB,EAAA,CAAA0B,UAAA,SAAAN,GAAA,CAAAd,WAAA,CAAAqB,UAAA,GAA8B;QAW9B3B,EAAA,CAAAyB,SAAA,GAA+B;QAA/BzB,EAAA,CAAA0B,UAAA,UAAAN,GAAA,CAAAd,WAAA,CAAAqB,UAAA,GAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}