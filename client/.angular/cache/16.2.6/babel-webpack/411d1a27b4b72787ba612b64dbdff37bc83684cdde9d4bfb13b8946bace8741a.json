{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isAuthenticated = false;\n    this.baseUrl = 'http://localhost:3000';\n  }\n  register(user) {\n    return this.http.post(`${this.baseUrl}/user`, user);\n  }\n  authenticate(username, password) {\n    const url = `${this.baseUrl}/api/users/login`;\n    return this.http.post(url, {\n      username,\n      password\n    }).pipe(tap(response => {\n      this.isAuthenticated = true;\n    }));\n  }\n  isLoggedIn() {\n    return this.isAuthenticated;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","AuthService","constructor","http","isAuthenticated","baseUrl","register","user","post","authenticate","username","password","url","pipe","response","isLoggedIn","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private isAuthenticated = false; \n  private baseUrl = 'http://localhost:3000'; \n\n  constructor(private http: HttpClient) {}\n\n  register(user: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/user`, user);\n  }\n\n\n  authenticate(username: string, password: string): Observable<any> {\n    const url = `${this.baseUrl}/api/users/login`;\n    return this.http.post(url, { username, password }).pipe(\n      tap((response) => {\n        this.isAuthenticated = true; \n      })\n    );\n  }\n\n  isLoggedIn(): boolean {\n    return this.isAuthenticated; \n  }\n}\n"],"mappings":"AAGA,SAASA,GAAG,QAAO,gBAAgB;;;AAKnC,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,eAAe,GAAG,KAAK;IACvB,KAAAC,OAAO,GAAG,uBAAuB;EAEF;EAEvCC,QAAQA,CAACC,IAAS;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,OAAO,EAAEE,IAAI,CAAC;EACrD;EAGAE,YAAYA,CAACC,QAAgB,EAAEC,QAAgB;IAC7C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,kBAAkB;IAC7C,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAACI,GAAG,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAACE,IAAI,CACrDb,GAAG,CAAEc,QAAQ,IAAI;MACf,IAAI,CAACV,eAAe,GAAG,IAAI;IAC7B,CAAC,CAAC,CACH;EACH;EAEAW,UAAUA,CAAA;IACR,OAAO,IAAI,CAACX,eAAe;EAC7B;EAAC,QAAAY,CAAA,G;qBAvBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}