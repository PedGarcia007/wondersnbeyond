{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n  }\n  login(credentials) {\n    return this.http.post('http://localhost:3000/api/users/login', credentials);\n  }\n  register(user) {\n    return this.http.post(`${this.apiUrl}/register`, user);\n  }\n  updateUser(id, data) {\n    return this.http.put(`${this.apiUrl}/api/users/${id}`, data);\n  }\n  updatePassword(userId, newPassword) {\n    const url = `${this.apiUrl}/api/users/updatepassword/${userId}`;\n    return this.http.put(url, {\n      newPassword\n    });\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","apiUrl","login","credentials","post","register","user","updateUser","id","data","put","updatePassword","userId","newPassword","url","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\CIS480W3\\wondersnbeyond\\client\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private apiUrl = 'http://localhost:3000';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n login(credentials: any): Observable<any> {\r\n  return this.http.post('http://localhost:3000/api/users/login', credentials);\r\n}\r\n\r\n\r\n  register(user: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/register`, user);\r\n  }\r\n\r\n  updateUser(id: string, data: any): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/api/users/${id}`, data);\r\n  }\r\n\r\n  updatePassword(userId: string, newPassword: string): Observable<any> {\r\n    const url = `${this.apiUrl}/api/users/updatepassword/${userId}`;\r\n    return this.http.put(url, { newPassword });\r\n  } \r\n\r\n  \r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAEA;EAEzCC,KAAKA,CAACC,WAAgB;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,uCAAuC,EAAED,WAAW,CAAC;EAC7E;EAGEE,QAAQA,CAACC,IAAS;IAChB,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,WAAW,EAAEK,IAAI,CAAC;EACxD;EAEAC,UAAUA,CAACC,EAAU,EAAEC,IAAS;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,MAAM,cAAcO,EAAE,EAAE,EAAEC,IAAI,CAAC;EAC9D;EAEAE,cAAcA,CAACC,MAAc,EAAEC,WAAmB;IAChD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACb,MAAM,6BAA6BW,MAAM,EAAE;IAC/D,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAACI,GAAG,EAAE;MAAED;IAAW,CAAE,CAAC;EAC5C;EAAC,QAAAE,CAAA,G;qBAtBUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}