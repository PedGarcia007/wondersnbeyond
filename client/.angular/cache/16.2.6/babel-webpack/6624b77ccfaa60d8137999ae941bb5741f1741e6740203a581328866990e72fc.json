{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SpellsComponent = class SpellsComponent {\n  constructor(spellsService) {\n    this.spellsService = spellsService;\n    this.spells = [];\n  }\n  ngOnInit() {\n    this.spellsService.getAllSpells().subscribe(data => {\n      this.spells = data;\n    }, error => {\n      console.error('Error fetching spells:', error);\n    });\n  }\n};\nSpellsComponent = __decorate([Component({\n  selector: 'app-spells',\n  templateUrl: './spells.component.html',\n  styleUrls: ['./spells.component.css']\n})], SpellsComponent);","map":{"version":3,"names":["Component","SpellsComponent","constructor","spellsService","spells","ngOnInit","getAllSpells","subscribe","data","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\spells\\spells.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SpellsService } from '../services/spells.service';\n\n@Component({\n  selector: 'app-spells',\n  templateUrl: './spells.component.html',\n  styleUrls: ['./spells.component.css']\n})\nexport class SpellsComponent implements OnInit {\n  spells: any[] = [];\n\n  constructor(private spellsService: SpellsService) {}\n\n  ngOnInit(): void {\n    this.spellsService.getAllSpells().subscribe(\n      data => {\n        this.spells = data;\n      },\n      error => {\n        console.error('Error fetching spells:', error);\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFjC,KAAAC,MAAM,GAAU,EAAE;EAEiC;EAEnDC,QAAQA,CAAA;IACN,IAAI,CAACF,aAAa,CAACG,YAAY,EAAE,CAACC,SAAS,CACzCC,IAAI,IAAG;MACL,IAAI,CAACJ,MAAM,GAAGI,IAAI;IACpB,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACH;CACD;AAfYR,eAAe,GAAAU,UAAA,EAL3BX,SAAS,CAAC;EACTY,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWb,eAAe,CAe3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}