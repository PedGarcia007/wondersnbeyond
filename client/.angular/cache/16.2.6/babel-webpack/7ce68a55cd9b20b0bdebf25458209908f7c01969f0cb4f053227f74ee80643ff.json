{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FindingsComponent_ul_6_li_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", item_r3.title, \" - \", item_r3.author, \"\");\n  }\n}\nfunction FindingsComponent_ul_6_li_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3.name);\n  }\n}\nfunction FindingsComponent_ul_6_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, FindingsComponent_ul_6_li_1_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵtemplate(2, FindingsComponent_ul_6_li_1_div_2_Template, 2, 1, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r3.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r3.name);\n  }\n}\nfunction FindingsComponent_ul_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, FindingsComponent_ul_6_li_1_Template, 3, 2, \"li\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.results);\n  }\n}\nfunction FindingsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class FindingsComponent {\n  constructor(http) {\n    this.http = http;\n    this.searchQuery = '';\n    this.results = [];\n    this.errorMessage = '';\n  }\n  onSearch() {\n    if (!this.searchQuery.trim()) {\n      this.errorMessage = 'Blank search';\n      this.results = [];\n      return;\n    }\n    this.http.get(`http://localhost:3000/api/search?q=${this.searchQuery}`).subscribe(data => {\n      this.results = data;\n      if (this.results.length === 0) {\n        this.errorMessage = 'Data not present';\n      } else {\n        this.errorMessage = '';\n      }\n    }, error => {\n      this.errorMessage = 'Error performing search';\n      this.results = [];\n    });\n  }\n  static #_ = this.ɵfac = function FindingsComponent_Factory(t) {\n    return new (t || FindingsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FindingsComponent,\n    selectors: [[\"app-findings\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"container\"], [\"type\", \"text\", \"placeholder\", \"Enter your search term...\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function FindingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function FindingsComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.searchQuery = $event;\n        })(\"keyup.enter\", function FindingsComponent_Template_input_keyup_enter_3_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function FindingsComponent_Template_button_click_4_listener() {\n          return ctx.onSearch();\n        });\n        i0.ɵɵtext(5, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, FindingsComponent_ul_6_Template, 2, 1, \"ul\", 3);\n        i0.ɵɵtemplate(7, FindingsComponent_div_7_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchQuery);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.results.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","item_r3","title","author","ɵɵtextInterpolate","name","ɵɵtemplate","FindingsComponent_ul_6_li_1_div_1_Template","FindingsComponent_ul_6_li_1_div_2_Template","ɵɵproperty","FindingsComponent_ul_6_li_1_Template","ctx_r0","results","ctx_r1","errorMessage","FindingsComponent","constructor","http","searchQuery","onSearch","trim","get","subscribe","data","length","error","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","FindingsComponent_Template","rf","ctx","ɵɵlistener","FindingsComponent_Template_input_ngModelChange_3_listener","$event","FindingsComponent_Template_input_keyup_enter_3_listener","FindingsComponent_Template_button_click_4_listener","FindingsComponent_ul_6_Template","FindingsComponent_div_7_Template"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\findings\\findings.component.ts","C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\findings\\findings.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-findings',\n  templateUrl: './findings.component.html',\n  styleUrls: ['./findings.component.css']\n})\nexport class FindingsComponent {\n  searchQuery: string = '';\n  results: any[] = [];\n  errorMessage: string = '';\n\n  constructor(private http: HttpClient) {}\n\n  onSearch() {\n    if (!this.searchQuery.trim()) {\n      this.errorMessage = 'Blank search';\n      this.results = [];\n      return;\n    }\n\n    this.http.get<any[]>(`http://localhost:3000/api/search?q=${this.searchQuery}`).subscribe(\n      data => {\n        this.results = data;\n        if (this.results.length === 0) {\n          this.errorMessage = 'Data not present';\n        } else {\n          this.errorMessage = '';\n        }\n      },\n      error => {\n        this.errorMessage = 'Error performing search';\n        this.results = [];\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <h2>Search</h2>\n    <input type=\"text\" [(ngModel)]=\"searchQuery\" placeholder=\"Enter your search term...\" (keyup.enter)=\"onSearch()\">\n    <button (click)=\"onSearch()\">Search</button>\n    <ul *ngIf=\"results.length > 0\">\n        <li *ngFor=\"let item of results\">\n            <!-- Display your data structure here -->\n            <div *ngIf=\"item.title\">{{ item.title }} - {{ item.author }}</div>\n            <div *ngIf=\"item.name\">{{ item.name }}</div>\n            <!-- Add more fields as per your needs -->\n        </li>\n    </ul>\n    <div *ngIf=\"errorMessage\">{{ errorMessage }}</div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}