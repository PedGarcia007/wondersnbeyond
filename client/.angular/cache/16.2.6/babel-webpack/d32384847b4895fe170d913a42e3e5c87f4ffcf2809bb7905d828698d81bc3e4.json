{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction RegisterComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.passwordValidationError);\n  }\n}\nexport class RegisterComponent {\n  constructor(router, authService, http) {\n    this.router = router;\n    this.authService = authService;\n    this.http = http;\n    this.username = '';\n    this.email = '';\n    this.password = '';\n    this.firstName = '';\n    this.lastName = '';\n    this.passwordValidationError = ''; // Added this line\n  }\n\n  isValidPassword(password) {\n    const regex = /^(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\n    return regex.test(password);\n  }\n  onSubmit() {\n    if (this.username && this.email && this.password && this.firstName && this.lastName) {\n      if (!this.isValidPassword(this.password)) {\n        // Check password validity\n        window.alert('Password must have at least one uppercase letter, one number, and be at least 6 characters long.');\n        return;\n      }\n      this.http.post('http://localhost:3000/api/users/register', {\n        username: this.username,\n        email: this.email,\n        password: this.password,\n        firstName: this.firstName,\n        lastName: this.lastName\n      }).subscribe(res => {\n        console.log('User registered:', res);\n        this.router.navigate(['/login']);\n      }, err => {\n        console.error('Error registering:', err);\n      });\n    } else {\n      console.error('Validation failed');\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 26,\n    vars: 6,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n        i0.ɵɵtext(13, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\")(16, \"label\", 7);\n        i0.ɵɵtext(17, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\")(20, \"label\", 9);\n        i0.ɵɵtext(21, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"button\", 11);\n        i0.ɵɵtext(24, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, RegisterComponent_span_25_Template, 2, 1, \"span\", 12);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.lastName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordValidationError);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n    styles: [\"div[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: 50px auto;\\n    padding: 20px;\\n    border: 1px solid #ddd;\\n    background-color: #fff;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n  \\n  .error-message[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 12px;\\n    margin-top: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsVUFBVTtJQUNWLGVBQWU7SUFDZixlQUFlO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","passwordValidationError","RegisterComponent","constructor","router","authService","http","username","email","password","firstName","lastName","isValidPassword","regex","test","onSubmit","window","alert","post","subscribe","res","console","log","navigate","err","error","_","ɵɵdirectiveInject","i1","Router","i2","AuthService","i3","HttpClient","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_2_listener","RegisterComponent_Template_input_ngModelChange_6_listener","$event","RegisterComponent_Template_input_ngModelChange_10_listener","RegisterComponent_Template_input_ngModelChange_14_listener","RegisterComponent_Template_input_ngModelChange_18_listener","RegisterComponent_Template_input_ngModelChange_22_listener","ɵɵtemplate","RegisterComponent_span_25_Template","ɵɵproperty"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\register\\register.component.ts","C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service'; // Import the AuthService\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  username: string = '';\n  email: string = '';\n  password: string = '';\n  firstName: string = '';\n  lastName: string = '';\n  passwordValidationError: string = '';  // Added this line\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private http: HttpClient,\n  ) {}\n\n  isValidPassword(password: string): boolean {\n    const regex = /^(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\n    return regex.test(password);\n  }\n\n  onSubmit() {\n    if (this.username && this.email && this.password && this.firstName && this.lastName) {\n      \n      if (!this.isValidPassword(this.password)) {  // Check password validity\n        window.alert('Password must have at least one uppercase letter, one number, and be at least 6 characters long.');\n        return;\n      }\n\n      this.http.post('http://localhost:3000/api/users/register', {\n        username: this.username,\n        email: this.email,\n        password: this.password,\n        firstName: this.firstName,\n        lastName: this.lastName\n      }).subscribe(\n        res => {\n          console.log('User registered:', res);\n          this.router.navigate(['/login']);\n        },\n        err => {\n          console.error('Error registering:', err);\n        }\n      );\n\n    } else {\n      console.error('Validation failed'); \n    }\n  }\n}\n","<div>\n  <br>\n  <form (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required>\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n    </div>\n    <div>\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n      \n    </div>\n    <div>\n      <label for=\"firstName\">First Name:</label>\n      <input type=\"text\" id=\"firstName\" [(ngModel)]=\"firstName\" name=\"firstName\">\n    </div>\n    <div>\n      <label for=\"lastName\">Last Name:</label>\n      <input type=\"text\" id=\"lastName\" [(ngModel)]=\"lastName\" name=\"lastName\">\n    </div>\n    <button type=\"submit\">Register</button>\n\n    <span *ngIf=\"passwordValidationError\" class=\"error-message\">{{ passwordValidationError }}</span>\n  </form>\n</div>\n"],"mappings":";;;;;;;;IC0BIA,EAAA,CAAAC,cAAA,eAA4D;IAAAD,EAAA,CAAAE,MAAA,GAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAApCH,EAAA,CAAAI,SAAA,GAA6B;IAA7BJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,uBAAA,CAA6B;;;ADhB7F,OAAM,MAAOC,iBAAiB;EAQ5BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,IAAgB;IAFhB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,IAAI,GAAJA,IAAI;IAVd,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAV,uBAAuB,GAAW,EAAE,CAAC,CAAE;EAMpC;;EAEHW,eAAeA,CAACH,QAAgB;IAC9B,MAAMI,KAAK,GAAG,qCAAqC;IACnD,OAAOA,KAAK,CAACC,IAAI,CAACL,QAAQ,CAAC;EAC7B;EAEAM,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,QAAQ,IAAI,IAAI,CAACC,KAAK,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACC,QAAQ,EAAE;MAEnF,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC,IAAI,CAACH,QAAQ,CAAC,EAAE;QAAG;QAC3CO,MAAM,CAACC,KAAK,CAAC,kGAAkG,CAAC;QAChH;;MAGF,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,0CAA0C,EAAE;QACzDX,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA;OAChB,CAAC,CAACQ,SAAS,CACVC,GAAG,IAAG;QACJC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,GAAG,CAAC;QACpC,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC,EACDC,GAAG,IAAG;QACJH,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAED,GAAG,CAAC;MAC1C,CAAC,CACF;KAEF,MAAM;MACLH,OAAO,CAACI,KAAK,CAAC,mBAAmB,CAAC;;EAEtC;EAAC,QAAAC,CAAA,G;qBA9CUxB,iBAAiB,EAAAR,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAnC,EAAA,CAAAiC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAArC,EAAA,CAAAiC,iBAAA,CAAAK,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBhC,iBAAiB;IAAAiC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9B/C,EAAA,CAAAC,cAAA,UAAK;QACHD,EAAA,CAAAiD,SAAA,SAAI;QACJjD,EAAA,CAAAC,cAAA,cAA8B;QAAxBD,EAAA,CAAAkD,UAAA,sBAAAC,oDAAA;UAAA,OAAYH,GAAA,CAAA3B,QAAA,EAAU;QAAA,EAAC;QAC3BrB,EAAA,CAAAC,cAAA,UAAK;QACmBD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,eAAiF;QAAhDD,EAAA,CAAAkD,UAAA,2BAAAE,0DAAAC,MAAA;UAAA,OAAAL,GAAA,CAAAnC,QAAA,GAAAwC,MAAA;QAAA,EAAsB;QAAvDrD,EAAA,CAAAG,YAAA,EAAiF;QAEnFH,EAAA,CAAAC,cAAA,UAAK;QACgBD,EAAA,CAAAE,MAAA,aAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACjCH,EAAA,CAAAC,cAAA,gBAAyE;QAA1CD,EAAA,CAAAkD,UAAA,2BAAAI,2DAAAD,MAAA;UAAA,OAAAL,GAAA,CAAAlC,KAAA,GAAAuC,MAAA;QAAA,EAAmB;QAAlDrD,EAAA,CAAAG,YAAA,EAAyE;QAE3EH,EAAA,CAAAC,cAAA,WAAK;QACmBD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,gBAAqF;QAAhDD,EAAA,CAAAkD,UAAA,2BAAAK,2DAAAF,MAAA;UAAA,OAAAL,GAAA,CAAAjC,QAAA,GAAAsC,MAAA;QAAA,EAAsB;QAA3DrD,EAAA,CAAAG,YAAA,EAAqF;QAGvFH,EAAA,CAAAC,cAAA,WAAK;QACoBD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC1CH,EAAA,CAAAC,cAAA,gBAA2E;QAAzCD,EAAA,CAAAkD,UAAA,2BAAAM,2DAAAH,MAAA;UAAA,OAAAL,GAAA,CAAAhC,SAAA,GAAAqC,MAAA;QAAA,EAAuB;QAAzDrD,EAAA,CAAAG,YAAA,EAA2E;QAE7EH,EAAA,CAAAC,cAAA,WAAK;QACmBD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACxCH,EAAA,CAAAC,cAAA,iBAAwE;QAAvCD,EAAA,CAAAkD,UAAA,2BAAAO,2DAAAJ,MAAA;UAAA,OAAAL,GAAA,CAAA/B,QAAA,GAAAoC,MAAA;QAAA,EAAsB;QAAvDrD,EAAA,CAAAG,YAAA,EAAwE;QAE1EH,EAAA,CAAAC,cAAA,kBAAsB;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAEvCH,EAAA,CAAA0D,UAAA,KAAAC,kCAAA,mBAAgG;QAClG3D,EAAA,CAAAG,YAAA,EAAO;;;QAtB8BH,EAAA,CAAAI,SAAA,GAAsB;QAAtBJ,EAAA,CAAA4D,UAAA,YAAAZ,GAAA,CAAAnC,QAAA,CAAsB;QAIxBb,EAAA,CAAAI,SAAA,GAAmB;QAAnBJ,EAAA,CAAA4D,UAAA,YAAAZ,GAAA,CAAAlC,KAAA,CAAmB;QAIbd,EAAA,CAAAI,SAAA,GAAsB;QAAtBJ,EAAA,CAAA4D,UAAA,YAAAZ,GAAA,CAAAjC,QAAA,CAAsB;QAKzBf,EAAA,CAAAI,SAAA,GAAuB;QAAvBJ,EAAA,CAAA4D,UAAA,YAAAZ,GAAA,CAAAhC,SAAA,CAAuB;QAIxBhB,EAAA,CAAAI,SAAA,GAAsB;QAAtBJ,EAAA,CAAA4D,UAAA,YAAAZ,GAAA,CAAA/B,QAAA,CAAsB;QAIlDjB,EAAA,CAAAI,SAAA,GAA6B;QAA7BJ,EAAA,CAAA4D,UAAA,SAAAZ,GAAA,CAAAzC,uBAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}