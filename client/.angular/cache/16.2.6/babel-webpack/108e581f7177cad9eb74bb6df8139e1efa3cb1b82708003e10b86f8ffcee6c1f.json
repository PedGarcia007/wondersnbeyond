{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isAuthenticated = false; // Initially, the user is not authenticated\n  }\n\n  authenticate(username, password) {\n    const url = '/api/users/login'; // Endpoint for user login on the server\n    return this.http.post(url, {\n      username,\n      password\n    });\n  }\n  isLoggedIn() {\n    return this.isAuthenticated; // Return the authentication status\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","isAuthenticated","authenticate","username","password","url","post","isLoggedIn","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\pedga\\OneDrive\\Desktop\\Test\\wondersnbeyond\\client\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private isAuthenticated = false; // Initially, the user is not authenticated\n\n  constructor(private http: HttpClient) {}\n\n  authenticate(username: string, password: string): Observable<any> {\n    const url = '/api/users/login'; // Endpoint for user login on the server\n    return this.http.post(url, { username, password });\n  }\n  \n\n  isLoggedIn(): boolean {\n    return this.isAuthenticated; // Return the authentication status\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,eAAe,GAAG,KAAK,CAAC,CAAC;EAEM;;EAEvCC,YAAYA,CAACC,QAAgB,EAAEC,QAAgB;IAC7C,MAAMC,GAAG,GAAG,kBAAkB,CAAC,CAAC;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACD,GAAG,EAAE;MAAEF,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACpD;EAGAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACN,eAAe,CAAC,CAAC;EAC/B;EAAC,QAAAO,CAAA,G;qBAdUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}